{"ast":null,"code":"var _jsxFileName = \"/Users/haiyenhaiyen/Documents/Project/vietnamtravel-material-ui/src/Modules/Header.test.js\";\nimport React from \"react\";\nimport { Router } from 'react-router-dom';\nimport { act } from \"react-dom/test-utils\";\nimport { createMemoryHistory } from 'history';\nimport { render, fireEvent } from '@testing-library/react';\nimport '@testing-library/jest-dom/extend-expect';\nimport Header from \"./Header\";\ntest('full app rendering/navigating', () => {\n  // Test href\n  const history = createMemoryHistory();\n  const {\n    getByText\n  } = render( /*#__PURE__*/React.createElement(Router, {\n    history: history,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 11\n    }\n  })));\n  expect(history.location.pathname).toBe(\"/\");\n  fireEvent.click(getByText(/food/i));\n  expect(history.location.pathname).toBe(\"/food\");\n  fireEvent.click(getByText(/place/i));\n  expect(history.location.pathname).toBe(\"/place\"); // Test Link Content\n\n  act(() => {\n    const goHomeLink = document.querySelector('#home');\n    const goFoodLink = document.querySelector('#food');\n    const goPlaceLink = document.querySelector('#place'); // Click it\n\n    goHomeLink.dispatchEvent(new MouseEvent(\"click\", {\n      bubbles: true\n    }));\n    goFoodLink.dispatchEvent(new MouseEvent(\"click\", {\n      bubbles: true\n    }));\n    goPlaceLink.dispatchEvent(new MouseEvent(\"click\", {\n      bubbles: true\n    })); // Check correct link content showed up\n\n    expect(goHomeLink.textContent).toBe('Home');\n    expect(goFoodLink.textContent).toBe('Food');\n    expect(goPlaceLink.textContent).toBe('Places');\n  });\n});","map":{"version":3,"sources":["/Users/haiyenhaiyen/Documents/Project/vietnamtravel-material-ui/src/Modules/Header.test.js"],"names":["React","Router","act","createMemoryHistory","render","fireEvent","Header","test","history","getByText","expect","location","pathname","toBe","click","goHomeLink","document","querySelector","goFoodLink","goPlaceLink","dispatchEvent","MouseEvent","bubbles","textContent"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,kBAAvB;AACA,SAASC,GAAT,QAAoB,sBAApB;AACA,SAASC,mBAAT,QAAoC,SAApC;AACA,SAASC,MAAT,EAAiBC,SAAjB,QAAkC,wBAAlC;AACA,OAAO,yCAAP;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEAC,IAAI,CAAC,+BAAD,EAAkC,MAAM;AAC1C;AACE,QAAMC,OAAO,GAAGL,mBAAmB,EAAnC;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAgBL,MAAM,eACxB,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEI,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADwB,CAA5B;AAMAE,EAAAA,MAAM,CAACF,OAAO,CAACG,QAAR,CAAiBC,QAAlB,CAAN,CAAkCC,IAAlC,CAAuC,GAAvC;AAEAR,EAAAA,SAAS,CAACS,KAAV,CAAgBL,SAAS,CAAC,OAAD,CAAzB;AACAC,EAAAA,MAAM,CAACF,OAAO,CAACG,QAAR,CAAiBC,QAAlB,CAAN,CAAkCC,IAAlC,CAAuC,OAAvC;AAEAR,EAAAA,SAAS,CAACS,KAAV,CAAgBL,SAAS,CAAC,QAAD,CAAzB;AACAC,EAAAA,MAAM,CAACF,OAAO,CAACG,QAAR,CAAiBC,QAAlB,CAAN,CAAkCC,IAAlC,CAAuC,QAAvC,EAfwC,CAiBxC;;AACAX,EAAAA,GAAG,CAAC,MAAM;AACR,UAAMa,UAAU,GAAGC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAnB;AACA,UAAMC,UAAU,GAAGF,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAnB;AACA,UAAME,WAAW,GAAGH,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAApB,CAHQ,CAKR;;AACAF,IAAAA,UAAU,CAACK,aAAX,CAAyB,IAAIC,UAAJ,CAAe,OAAf,EAAwB;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAxB,CAAzB;AACAJ,IAAAA,UAAU,CAACE,aAAX,CAAyB,IAAIC,UAAJ,CAAe,OAAf,EAAwB;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAxB,CAAzB;AACAH,IAAAA,WAAW,CAACC,aAAZ,CAA0B,IAAIC,UAAJ,CAAe,OAAf,EAAwB;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAxB,CAA1B,EARQ,CAUR;;AACAZ,IAAAA,MAAM,CAACK,UAAU,CAACQ,WAAZ,CAAN,CAA+BV,IAA/B,CAAoC,MAApC;AACAH,IAAAA,MAAM,CAACQ,UAAU,CAACK,WAAZ,CAAN,CAA+BV,IAA/B,CAAoC,MAApC;AACAH,IAAAA,MAAM,CAACS,WAAW,CAACI,WAAb,CAAN,CAAgCV,IAAhC,CAAqC,QAArC;AACD,GAdE,CAAH;AAeD,CAjCC,CAAJ","sourcesContent":["import React from \"react\";\nimport { Router } from 'react-router-dom'\nimport { act } from \"react-dom/test-utils\";\nimport { createMemoryHistory } from 'history'\nimport { render, fireEvent } from '@testing-library/react'\nimport '@testing-library/jest-dom/extend-expect'\nimport Header from \"./Header\";\n\ntest('full app rendering/navigating', () => {\n  // Test href\n    const history = createMemoryHistory()\n    const { getByText } = render(\n        <Router history={history}>\n          <Header />\n        </Router>\n      )\n    \n    expect(history.location.pathname).toBe(\"/\");\n\n    fireEvent.click(getByText(/food/i));\n    expect(history.location.pathname).toBe(\"/food\");\n\n    fireEvent.click(getByText(/place/i));\n    expect(history.location.pathname).toBe(\"/place\");\n\n    // Test Link Content\n    act(() => {\n      const goHomeLink = document.querySelector('#home');\n      const goFoodLink = document.querySelector('#food');\n      const goPlaceLink = document.querySelector('#place');\n\n      // Click it\n      goHomeLink.dispatchEvent(new MouseEvent(\"click\", { bubbles: true }));\n      goFoodLink.dispatchEvent(new MouseEvent(\"click\", { bubbles: true }));\n      goPlaceLink.dispatchEvent(new MouseEvent(\"click\", { bubbles: true }));\n\n      // Check correct link content showed up\n      expect(goHomeLink.textContent).toBe('Home');\n      expect(goFoodLink.textContent).toBe('Food');\n      expect(goPlaceLink.textContent).toBe('Places');\n    });\n  })\n  "]},"metadata":{},"sourceType":"module"}